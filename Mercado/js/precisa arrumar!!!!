const fs = require('fs');
const readline = require('readline').createInterface({
  input: process.stdin,
  output: process.stdout
});

const fileName = 'users.txt';

// Função principal
function main() {
  console.log('1 - Cadastrar\n2 - Logar\n3 - Entrar como administrador');
  readline.question('Escolha uma opção: ', option => {
    switch (option) {
      case '1':
        readline.question('Digite o nome de usuário: ', username => {
          readline.question('Digite a senha: ', password => {
            saveUser(username, password);
            main();
          });
        });
        break;
      case '2':
        readline.question('Digite o nome de usuário: ', username => {
          readline.question('Digite a senha: ', password => {
            checkLogin(username, password);
            main();
          });
        });
        case '3':
          this.logarComoAdmin();
        main();
    }
  });
}

logarComoAdmin() {
  console.log('Logando como administrador...');
  this.rl.question('Digite sua senha: ', (senha) => {
      if (senha === 'admin') {
          this.adminLogado = true;
          this.opcoesDeAdmin();
      } else {
          console.log('Senha inválida. Tente novamente.');
          this.logarComoAdmin();
      }
  });
}

// Função para salvar usuário
function saveUser(username, password) {
  const user = `${username}:${password}\n`;
  fs.appendFile(fileName, user, (err) => {
    if (err) throw err;
    console.log('Usuário cadastrado com sucesso!');
  });
}

// Função para verificar login
function checkLogin(username, password) {
  fs.readFile(fileName, 'utf8', (err, data) => {
    if (err) {
      console.log('Erro ao ler o arquivo.');
      return;
    }
    const users = data.split('\n');
    const userFound = users.find(user => {
      const [userUsername, userPassword] = user.split(':');
      return userUsername === username && userPassword === password;
  });

    if (userFound) {
        console.log('Login efetuado com sucesso!\n');
        console.log('--------------------------');
        console.log('BEM VINDO AO SUPER ABACATO'); 
        console.log('--------------------------\n');

        const fs = require('fs');
const readline = require('readline').createInterface({
  input: process.stdin,
  output: process.stdout
});

const produtos = [
  { id: 1, nome: 'abacate', preco: 3.99  },
  { id: 2, nome: 'mamao', preco: 7.37 },
  { id: 3, nome: 'Pera', preco: 6.00 },
  { id: 4, nome: 'uva verde', preco: 14.99 },
  { id: 5, nome: 'Pao de queijo', preco: 0.49 }
];

let carrinho = [];

function listarProdutos() {
  console.log('Lista de Produtos:');
  produtos.forEach((produto) => {
    console.log(`${produto.id} - ${produto.nome} - R$ ${produto.preco}`);
  });
}

function adicionarAoCarrinho() {
  listarProdutos();
  readline.question('Digite o ID do produto que deseja adicionar ao carrinho: ', (id) => {
    const produto = produtos.find((p) => p.id === parseInt(id));
    if (produto) {
      readline.question('Digite a quantidade do produto: ', (quantidade) => {
        const quantidadeFloat = parseFloat(quantidade);
        if (quantidadeFloat > 0) {
          const item = { produto, quantidade: quantidadeFloat };
          carrinho.push(item);
          console.log(`Produto ${produto.nome} adicionado ao carrinho com quantidade ${quantidadeFloat}!`);
        } else {
          console.log('Quantidade inválida!');
        }
        menu();
      });
    } else {
      console.log('Produto não encontrado!');
      menu();
    }
  });
}

function retirarDoCarrinho() {
  if (carrinho.length === 0) {
    console.log('Carrinho vazio!');
    menu();
  } else {
    console.log('Carrinho:');
    carrinho.forEach((item, index) => {
      console.log(`${index + 1} - ${item.produto.nome} - Quantidade: ${item.quantidade}`);
    });
    readline.question('Digite o número do item que deseja retirar do carrinho: ', (numero) => {
      const index = parseInt(numero) - 1;
      if (index >= 0 && index < carrinho.length) {
        carrinho.splice(index, 1);
        console.log('Item retirado do carrinho!');
      } else {
        console.log('Item não encontrado!');
      }
      menu();
    });
  }
}

function esvaziarCarrinho() {
  carrinho = [];
  console.log('Carrinho esvaziado!');
  menu();
}

function continuarParaPagamento() {
  if (carrinho.length === 0) {
    console.log('Carrinho vazio!');
    menu();
  } else {
    const total = carrinho.reduce((acc, item) => acc + item.produto.preco * item.quantidade, 0);
    console.log(`Total: R$ ${total}`);
    readline.question('Deseja nota fiscal? (sim/nao) ', (resposta) => {
      if (resposta.toLowerCase() === 'sim') {
        readline.question('Digite seu CPF: ', (cpf) => {
          const data = new Date();
          const notaFiscal = `CPF: ${cpf}\nProdutos:\n${carrinho.map((item) => `${item.produto.nome} - Quantidade: ${item.quantidade}`).join('\n')}\nData: ${data.toLocaleDateString()}\nHora: ${data.toLocaleTimeString()}\nTotal: R$ ${total}`;
          fs.writeFile(`nota_fiscal= ${cpf}.txt`, notaFiscal, (err) => { 
            if (err) {
              console.log('Erro ao salvar nota fiscal!');
            } else {
              console.log('Nota fiscal salva com sucesso!');
            }
          });
        });
      }
      menu();
    });
  }
}

opcoesDeAdmin() {
  console.log('Opções de administrador:');
  console.log('1 - Adicionar produto ao catálogo');
  console.log('2 - Remover produto do catálogo');
  console.log('3 - Alterar preço de produto');
  console.log('4 - Listar produtos do catálogo');
  console.log('5 - Sair do modo administrador');

  this.rl.question('Digite a opção desejada: ', (escolha) => {
      if (escolha === '1') {
          this.adicionarProdutoAoCatalogo();
      } else if (escolha === '2') {
          this.removerProdutoDoCatalogo();
      } else if (escolha === '3') {
          this.alterarPrecoDeProduto();
      } else if (escolha === '4') {
          this.listarProdutosDoCatalogo();
      } else if (escolha === '5') {
          this.sairDoAdmin();
      } else {
          console.log('Opção inválida.');
          this.opcoesDeAdmin();
      }
  });
}
  
adicionarProdutoAoCatalogo() {
  console.log('Adicionando produto ao catálogo...');
  this.rl.question('Digite o nome do produto: ', (nome) => {
      this.rl.question('Digite o preço do produto: ', (preco) => {
          const novoProduto = {
              id: this.catalogo.length + 1, // Gera um novo ID automaticamente
              nome: nome,
              preco: parseFloat(preco)
          };
          this.catalogo.push(novoProduto);
          this.salvarCatalogo(); // Salva as alterações no arquivo
          console.log('Produto adicionado ao catálogo com sucesso!');
          this.opcoesDeAdmin();
      });
  });
}

removerProdutoDoCatalogo() {
  console.log('Removendo produto do catálogo...');
  this.rl.question('Digite o nome do produto: ', (nome) => {
      const index = this.catalogo.findIndex((p) => p.nome === nome);
      if (index !== -1) {
          this.catalogo.splice(index, 1);
          this.salvarCatalogo(); // Salva as alterações no arquivo
          console.log('Produto removido do catálogo com sucesso!');
          this.opcoesDeAdmin();
      } else {
          console.log('Produto não encontrado no catálogo.');
          this.removerProdutoDoCatalogo();
      }
  });
}

alterarPrecoDeProduto() {
  console.log('Alterando preço de produto...');
  this.rl.question('Digite o nome do produto: ', (nome) => {
      const produto = this.catalogo.find((p) => p.nome === nome);
      if (produto) {
          this.rl.question('Digite o novo preço: ', (preco) => {
              produto.preco = parseFloat(preco);
              this.salvarCatalogo(); // Salva as alterações no arquivo
              console.log('Preço alterado com sucesso!');
              this.opcoesDeAdmin();
          });
      } else {
          console.log('Produto não encontrado.');
          this.alterarPrecoDeProduto();
      }
  });
}

listarProdutosDoCatalogo() {
  console.log('Listando produtos do catálogo...');
  this.catalogo.forEach((produto) => {
      console.log(`${produto.id} - ${produto.nome} - R$ ${produto.preco.toFixed(2)}`);
  });
  this.opcoesDeAdmin();
}

 sairDoAdmin() {
  console.log('Saindo do modo administrador...');
  this.adminLogado = false;
  this.boasVindas();
}
}

function menu() {
  console.log('3 - Listar Produtos');
  console.log('4 - Adicionar ao Carrinho');
  console.log('5 - Retirar do Carrinho');
  console.log('6 - Esvaziar Carrinho');
  console.log('7 - Continuar para Pagamento');
  console.log('8 - Sair');
  readline.question('Escolha uma opção: ', (opcao) => {
    switch (opcao) {
      case '3':
        console.log('------------------');
        listarProdutos();
        console.log('------------------');
        menu();
        break;
      case '4':
        console.log('------------------');
        adicionarAoCarrinho();
        break;
      case '5':
        console.log('------------------');
        retirarDoCarrinho();
        console.log('------------------');
        break;
      case '6':
        console.log('------------------');
        esvaziarCarrinho();
        console.log('------------------');
        break;
      case '7':
        console.log('------------------');
        continuarParaPagamento();
        break;
      case '8':
        console.log('------------------');
        sair();
        break;
        default:
        console.log('opçao invalida');
          menu();
    }
    });
  }

  menu();
     }  });
}

main();

